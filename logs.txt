NAME: xnl-v1
LAST DEPLOYED: Sat Mar 15 01:20:20 2025
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
adService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_1_adservice
    tag: latest
  name: adservice
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 200m
      memory: 180Mi
authorizationPolicies:
  create: true
cartDatabase:
  connectionString: cart-redis:6379
  externalRedisTlsOrigination:
    certificate: ""
    enable: false
    endpointAddress: ""
    endpointPort: 6379
    name: external-redis-tls
  inClusterRedis:
    create: true
    name: cart-redis
    publicRepository: false
  type: redis
cartService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_12_zcartservice
    tag: latest
  name: cartservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
checkoutService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_2_checkoutservice
    tag: latest
  name: checkoutservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
currencyService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_3_currencyservice
    tag: latest
  name: currencyservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
emailService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_4_emailservice
    tag: latest
  name: emailservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
frontend:
  create: true
  cymbalBranding: false
  externalService: true
  image:
    repository: ghcr.io/abhijithganesh/svc_5_frontend
    tag: latest
  name: frontend
  platform: local
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
  singleSharedSession: false
  virtualService:
    create: false
    gateway:
      labelKey: asm
      labelValue: ingressgateway
      name: asm-ingressgateway
      namespace: asm-ingress
    hosts:
    - '*'
imagePullSecrets:
  name: ghcr-secret
loadGenerator:
  checkFrontendInitContainer: true
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_6_loadgenerator
    tag: latest
  name: loadgenerator
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 300m
      memory: 256Mi
namespace: ag-microservices-demo
networkPolicies:
  create: true
opentelemetryCollector:
  create: false
  name: opentelemetry-collector
paymentService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_7_paymentservice
    tag: latest
  name: paymentservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
productCatalogService:
  create: true
  extraLatency: ""
  image:
    repository: ghcr.io/abhijithganesh/svc_8_productcatalogservice
    tag: latest
  name: productcatalogservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
prometheus:
  enabled: true
  replicas: 2
  serviceAccountName: prometheus
recommendationService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_9_recommendationservice
    tag: latest
  name: recommendationservice
  resources:
    limits:
      cpu: 200m
      memory: 450Mi
    requests:
      cpu: 100m
      memory: 220Mi
redis:
  image:
    repository: redis
    tag: alpine
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
seccompProfile:
  enable: false
  type: RuntimeDefault
securityContext:
  enable: true
serviceAccounts:
  annotations: {}
  annotationsOnlyForCartservice: false
  create: true
shippingService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_10_shippingservice
    tag: latest
  name: shippingservice
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
shoppingAssistantService:
  create: true
  image:
    repository: ghcr.io/abhijithganesh/svc_11_shoppingassistantservice
    tag: latest
  name: shoppingassistantservice
sidecars:
  create: true

HOOKS:
MANIFEST:
---
# Source: xnl-innovations-hiring-challenge/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/adservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: adservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: adservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
     - port: 9555
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/cartservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cartservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: cartservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
     - port: 7070
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/checkout.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: checkoutservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: checkoutservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
     - port: 5050
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/currencyservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: currencyservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: currencyservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
     - port: 7000
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/email.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: emailservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: emailservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
     - port: 8080
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/frontend.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - {}
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/load.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: loadgenerator
  namespace: default
  labels:
    app: loadgenerator
spec:
  podSelector:
    matchLabels:
      app: loadgenerator
  policyTypes:
  - Egress
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/paymentservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: paymentservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: paymentservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
     - port: 50051
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/productcatalogservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: productcatalogservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: productcatalogservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    - podSelector:
        matchLabels:
          app: checkoutservice
    - podSelector:
        matchLabels:
          app: recommendationservice
    ports:
     - port: 3550
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/reccomendation.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: recommendationservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: recommendationservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
     - port: 8080
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/redis.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cart-redis
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: cart-redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: cartservice
    ports:
     - port: 6379
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/networkpolicy/shippingservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: shippingservice
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: shippingservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
     - port: 50051
       protocol: TCP
  egress:
  - {}
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/adservice.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/cart-service.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cartservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/checkout.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkoutservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/currencyservice.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: currencyservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/email.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: emailservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/frontend.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/load.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loadgenerator
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/paymentservice.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: paymentservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/productcatalogservice.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: productcatalogservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/reccomendation.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: recommendationservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/redis.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cart-redis
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/serviceaccounts/shippingservice.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shippingservice
  namespace: default
---
# Source: xnl-innovations-hiring-challenge/templates/services/adservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
  labels:
    app: adservice
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
# Source: xnl-innovations-hiring-challenge/templates/services/cartservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: default
  labels:
    app: cartservice
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
# Source: xnl-innovations-hiring-challenge/templates/services/checkout.yaml
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: default
  labels:
    app: checkoutservice
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
# Source: xnl-innovations-hiring-challenge/templates/services/currencyservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: default
  labels:
    app: currencyservice
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
# Source: xnl-innovations-hiring-challenge/templates/services/email.yaml
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: default
  labels:
    app: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
# Source: xnl-innovations-hiring-challenge/templates/services/frontend-external.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
# Source: xnl-innovations-hiring-challenge/templates/services/frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: default
  labels:
    app: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
# Source: xnl-innovations-hiring-challenge/templates/services/paymentservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: default
  labels:
    app: paymentservice
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
# Source: xnl-innovations-hiring-challenge/templates/services/productcatalogservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: default
  labels:
    app: productcatalogservice
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
# Source: xnl-innovations-hiring-challenge/templates/services/reccommendation.yaml
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: default
  labels:
    app: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
# Source: xnl-innovations-hiring-challenge/templates/services/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: cart-redis
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: cart-redis
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: 6379
---
# Source: xnl-innovations-hiring-challenge/templates/services/shippingservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: default
  labels:
    app: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/adservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: default
  labels:
    app: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      imagePullSecrets: 
            ghcr-secret
      serviceAccountName: adservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_1_adservice:latest

        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/cartservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  namespace: default
  labels:
    app: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: cartservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_12_zcartservice:latest

        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "cart-redis:6379"
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        readinessProbe:
          initialDelaySeconds: 15
          grpc:
            port: 7070
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          grpc:
            port: 7070
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/checkout.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: default
  labels:
    app: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: checkoutservice
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_2_checkoutservice:latest

        ports:
        - containerPort: 5050
        readinessProbe:
          grpc:
            port: 5050
        livenessProbe:
          grpc:
            port: 5050
        env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: PAYMENT_SERVICE_ADDR
          value: "paymentservice:50051"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/currencyservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  namespace: default
  labels:
    app: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: currencyservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_3_currencyservice:latest
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 7000
        livenessProbe:
          grpc:
            port: 7000
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/email.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  namespace: default
  labels:
    app: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: emailservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_4_emailservice:latest
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: default
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: frontend
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_5_frontend:latest
        ports:
        - containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-readiness-probe"
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-liveness-probe"
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendationservice:8080"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkoutservice:5050"
        - name: AD_SERVICE_ADDR
          value: "adservice:9555"
        - name: SHOPPING_ASSISTANT_SERVICE_ADDR
          value: "shoppingassistantservice:80"
        - name: ENV_PLATFORM
          value: "local"
        - name: CYMBAL_BRANDING
          value: "false"
        - name: ENABLE_ASSISTANT
          value: "true"
        - name: ENABLE_SINGLE_SHARED_SESSION
          value: "false"
        resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/load.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: default
  labels:
    app: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: loadgenerator
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
      - name: frontend-check
        image: busybox:latest@sha256:498a000f370d8c37927118ed80afe8adc38d1edcbfc071627d17b25c88efcab0
        command:
        - /bin/sh
        - -exc
        - |
          MAX_RETRIES=12
          RETRY_INTERVAL=10
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
            STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
            if [ $STATUSCODE -eq 200 ]; then
                echo "Frontend is reachable."
                exit 0
            fi
            echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
            sleep $RETRY_INTERVAL
          done
          echo "Failed to reach frontend after $MAX_RETRIES attempts."
          exit 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
      containers:
      - name: main
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_6_loadgenerator:latest

        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        - name: RATE
          value: "1"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 300m
            memory: 256Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/paymentservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  namespace: default
  labels:
    app: paymentservice
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: paymentservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_7_paymentservice:latest
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 50051
        livenessProbe:
          grpc:
            port: 50051
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/productcatalogservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  namespace: default
  labels:
    app: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: productcatalogservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_8_productcatalogservice:latest
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: DISABLE_PROFILER
          value: "1"
        - name: EXTRA_LATENCY
          value: 
        readinessProbe:
          grpc:
            port: 3550
        livenessProbe:
          grpc:
            port: 3550
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/reccommendation.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: default
  labels:
    app: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: recommendationservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_9_recommendationservice:latest
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: DISABLE_PROFILER
          value: "1"
        resources:
          limits:
            cpu: 200m
            memory: 450Mi
          requests:
            cpu: 100m
            memory: 220Mi
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/redis.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-redis
  namespace: default
spec:
  selector:
    matchLabels:
      app: cart-redis
  template:
    metadata:
      labels:
        app: cart-redis
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: cart-redis
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: redis
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: "redis:alpine"
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 128Mi
            cpu: 200m
          requests:
            memory: 64Mi
            cpu: 100m
      volumes:
      - name: redis-data
        emptyDir: {}
---
# Source: xnl-innovations-hiring-challenge/templates/deployments/shippingservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  namespace: default
  labels:
    app: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      imagePullSecrets:
        ghcr-secret
      serviceAccountName: shippingservice
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: ghcr.io/abhijithganesh/svc_10_shippingservice:latest
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        livenessProbe:
          grpc:
            port: 50051
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
# Source: xnl-innovations-hiring-challenge/templates/common.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-all
  namespace: default
spec: {}
---
# Source: xnl-innovations-hiring-challenge/templates/istio/adservice-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
    to:
    - operation:
        paths:
        - /hipstershop.AdService/GetAds
        methods:
        - POST
        ports:
        - "9555"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/cartservice-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: cartservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: cartservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
        - cluster.local/ns/default/sa/checkoutservice
    to:
    - operation:
        paths:
        - /hipstershop.CartService/AddItem
        - /hipstershop.CartService/GetCart
        - /hipstershop.CartService/EmptyCart
        methods:
        - POST
        ports:
        - "7070"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/checkout-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: checkoutservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: checkoutservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
    to:
    - operation:
        paths:
        - /hipstershop.CheckoutService/PlaceOrder
        methods:
        - POST
        ports:
        - "5050"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/currencyservice-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: currencyservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: currencyservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
        - cluster.local/ns/default/sa/checkoutservice
    to:
    - operation:
        paths:
        - /hipstershop.CurrencyService/Convert
        - /hipstershop.CurrencyService/GetSupportedCurrencies
        methods:
        - POST
        ports:
        - "7000"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/email-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: emailservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: emailservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/checkoutservice
    to:
    - operation:
        paths:
        - /hipstershop.EmailService/SendOrderConfirmation
        methods:
        - POST
        ports:
        - "8080"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/frontend-authorization.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: frontend
  namespace: default
spec:
  selector:
    matchLabels:
      app: frontend
  rules:
  - to:
    - operation:
        methods:
        - GET
        - POST
        ports:
        - "8080"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/paymentservice-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: paymentservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: paymentservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/checkoutservice
    to:
    - operation:
        paths:
        - /hipstershop.PaymentService/Charge
        methods:
        - POST
        ports:
        - "50051"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/productcatalogservice-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: productcatalogservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
        - cluster.local/ns/default/sa/checkoutservice
        - cluster.local/ns/default/sa/recommendationservice
    to:
    - operation:
        paths:
        - /hipstershop.ProductCatalogService/GetProduct
        - /hipstershop.ProductCatalogService/ListProducts
        methods:
        - POST
        ports:
        - "3550"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/reccomenndation-authorizationpolicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: recommendationservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: recommendationservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
    to:
    - operation:
        paths:
        - /hipstershop.RecommendationService/ListRecommendations
        methods:
        - POST
        ports:
        - "8080"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/redis-authorizationpoloicy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: cart-redis
  namespace: default
spec:
  selector:
    matchLabels:
      app: cart-redis
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/cartservice
    to:
    - operation:
        ports:
        - "6379"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/shippingservice-authorization.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: shippingservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: shippingservice
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/default/sa/frontend
        - cluster.local/ns/default/sa/checkoutservice
    to:
    - operation:
        paths:
        - /hipstershop.ShippingService/GetQuote
        - /hipstershop.ShippingService/ShipOrder
        methods:
        - POST
        ports:
        - "50051"
---
# Source: xnl-innovations-hiring-challenge/templates/istio/adservice-networkingpolicy.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: adservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: adservice
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/adservice-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: adservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: adservice
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/cartservice-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: cartservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: cartservice
  egress:
  - hosts:
    - istio-system/*
    - ./cart-redis.default.svc.cluster.local
---
# Source: xnl-innovations-hiring-challenge/templates/istio/checkout-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: checkoutservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: checkoutservice
  egress:
  - hosts:
    - istio-system/*
    - ./cartservice.default.svc.cluster.local
    - ./currencyservice.default.svc.cluster.local
    - ./emailservice.default.svc.cluster.local
    - ./paymentservice.default.svc.cluster.local
    - ./productcatalogservice.default.svc.cluster.local
    - ./shippingservice.default.svc.cluster.local
---
# Source: xnl-innovations-hiring-challenge/templates/istio/currencyservice-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: currencyservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: currencyservice
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/email-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: emailservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: emailservice
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/frontend-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: frontend
  namespace: default
spec:
  workloadSelector:
    labels:
      app: frontend
  egress:
  - hosts:
    - istio-system/*
    - ./adservice.default.svc.cluster.local
    - ./cartservice.default.svc.cluster.local
    - ./checkoutservice.default.svc.cluster.local
    - ./currencyservice.default.svc.cluster.local
    - ./productcatalogservice.default.svc.cluster.local
    - ./recommendationservice.default.svc.cluster.local
    - ./shippingservice.default.svc.cluster.local
---
# Source: xnl-innovations-hiring-challenge/templates/istio/load-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: loadgenerator
  namespace: default
spec:
  workloadSelector:
    labels:
      app: loadgenerator
  egress:
  - hosts:
    - istio-system/*
    - ./frontend.default.svc.cluster.local
---
# Source: xnl-innovations-hiring-challenge/templates/istio/paymentservice-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: paymentservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: paymentservice
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/productcatalogservice-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: productcatalogservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: productcatalogservice
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/reccommendation-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: recommendationservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: recommendationservice
  egress:
  - hosts:
    - istio-system/*
    - ./productcatalogservice.default.svc.cluster.local
---
# Source: xnl-innovations-hiring-challenge/templates/istio/redis-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: cart-redis
  namespace: default
spec:
  workloadSelector:
    labels:
      app: cart-redis
  egress:
  - hosts:
    - istio-system/*
---
# Source: xnl-innovations-hiring-challenge/templates/istio/shippingservice-sidecar.yaml
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: shippingservice
  namespace: default
spec:
  workloadSelector:
    labels:
      app: shippingservice
  egress:
  - hosts:
    - istio-system/*

NOTES:
###############################
### Frontend External Service ###
###############################

**Note:** It may take several minutes for the LoadBalancer IP to become available.

To monitor the status of the external service, run:
```bash
kubectl get svc --namespace default frontend-external -w
```

Once the IP is available, retrieve it with:
```bash
export SERVICE_IP=$(kubectl get svc --namespace default frontend-external --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
echo "Frontend URL: http://$SERVICE_IP"
```
